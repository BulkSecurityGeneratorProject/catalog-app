image: docker:latest

stages:
  - build
  - test
  - deploy

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository
    - node_modules/
    - node

variables:
  HEROKU_API_KEY: ea108adc-9001-4110-adb5-569c1b183716
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: '-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true'
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: '--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true'

maven-build:
  stage: build
  image: maven:latest
  script:
    - ./mvnw -Pprod clean package -DskipTests
  artifacts:
    name: 'catalog-mono-$CI_COMMIT_REF_NAME-$CI_BUILD_REF'
    expire_in: 1 week
    paths:
      - target/*.jar

unit-test:
  stage: test
  image: maven:latest
  script:
    - ./mvnw clean test

deploy-staging:
  stage: deploy
  image: ruby:2.3
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=catalog-mono-staging --api-key=$HEROKU_API_KEY
  only:
    - develop
  tags:
    - docker

deploy-production:
  stage: deploy
  image: ruby:2.3
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=catalog-mono-production --api-key=$HEROKU_API_KEY
  only:
    - master
  tags:
    - docker
